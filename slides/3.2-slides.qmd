---
format:
  revealjs:
    theme: [default, custom.scss]
    logo: "../images/metrics_hex.png"
    height: 900
    width: 1600
    df-print: paged
    slide-number: c
    chalkboard: true
overview: true
execute:
  echo: false
  warning: false
  freeze: auto
---

##  {data-menu-title="Title Slide" background-image="images/metrics_title_slide.png"}

[3.2 --- DAGs]{.custom-title}

[ECON 4470 • Econometrics]{.custom-subtitle}

[Jordan Izenwasser <br> Slides Adapated from Ryan Safner, PhD]{.custom-author}

```{r}
#| label: setup
#| include: false
library(tidyverse)
library(broom)
library(haven)
library(kableExtra)
library(patchwork)
library(fontawesome)
library(gapminder)
library(ggthemes)
library(scales)
library(infer)
knitr::opts_chunk$set(echo=F,
                      message=F,
                      warning=F)
update_geom_defaults("label", list(family = "Fira Sans Condensed"))
update_geom_defaults("text", list(family = "Fira Sans Condensed"))

```

## Contents {background-color="#314f4f"}

[Causation and Correlation](#causation-and-correlation)

[Causal Diagrams](#causal-diagrams)

[DAG Rules](#dag-rules)

# Causation and Correlation {background-color="#314f4f" .centered}

## You Don’t Need an RCT to Talk About Causality

::: columns
::: {.column width="50%"}
- While RCT's are the "gold standard" of establishing causality, in economics they are often expensive and impractical

- Economists take advantage of [natural experiments]{.hi-purple} using [quasi-experimental methods]{.hi-purple} instead of RCT's

- Using quasi-experimental methods often requires some creativity and a lot of institutional knowledge 


:::
::: {.column width="50%"}
![](images/causation.jpg)
:::
:::

## The Causal Revolution

![](images/causaltwitter.png){fig-align="center"}

## RCTs and Evidence-Based Policy

[Should we *ONLY* base policies on the evidence from Randomized Controlled Trials?]{.hi-purple}

. . .

::: columns
::: {.column width="50%"}

<blockquote class="twitter-tweet"><p lang="en" dir="ltr">|￣￣￣￣￣￣￣￣￣￣|<br> IF U DONT SMOKE,<br> U ALREADY <br> BELIEVE IN<br> CAUSAL INFERENCE<br> WITHOUT<br> RANDOMIZED TRIALS<br>|＿＿＿＿＿＿＿＿＿＿| <br> (\__/) ||<br> (•ㅅ•) ||<br> / 　 づ<a href="https://twitter.com/hashtag/HistorianSignBunny?src=hash&amp;ref_src=twsrc%5Etfw">#HistorianSignBunny</a> <a href="https://twitter.com/hashtag/Epidemiology?src=hash&amp;ref_src=twsrc%5Etfw">#Epidemiology</a></p>&mdash; Ellie Murray (@EpiEllie) <a href="https://twitter.com/EpiEllie/status/1017622949799571456?ref_src=twsrc%5Etfw">July 13, 2018</a></blockquote> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script> 

:::
::: {.column width="50%"}

Source: [British Medical Journal](https://www.bmj.com/content/363/bmj.k5094)

![](images/rctparachutesstudy.png)

:::
:::


## What Does Causation Mean?

::: columns
::: {.column width="50%"}
- [“Correlation does not imply causation”]{.hi-turquoise}
  - this is just pointing out that [exogeneity is violated]{.hi-purple}

:::
::: {.column width="50%"}
![](images/causation.jpg)
:::
:::

## What Does Causation Mean?

::: columns
::: {.column width="50%"}
- [“Correlation does not imply causation”]{.hi-turquoise}
  - this is just pointing out that [exogeneity is violated]{.hi-purple}

- [“Correlation implies causation”]{.hi}
  - for an association, there must be *some* causal chain that relates $X$ and $Y$
  - but not necessarily *merely* $X \rightarrow Y$

- [“Correlation plus exogeneity is causation.”]{.hi}

:::
::: {.column width="50%"}
![](images/causation.jpg)
:::
:::

## Correlation and Causation

::: columns
::: {.column width="50%"}
- [Correlation:]{.hi-purple}
  - Math & Statistics
  - Computers, AI, Machine learning can figure this out (better than humans)

- [Causation:]{.hi-purple}
  - Philosophy, Intuition, Theory
  - [Counterfactual thinking]{.hi}, unique to humans (vs. animals or computers)
  - Computers [*cannot*]{.ul} (yet) figure this out


:::
::: {.column width="50%"}
![](images/causation.jpg)
:::
:::


## Causal Inference

::: columns
::: {.column width="50%"}
- We will seek to understand what causality *is* and how we can approach finding it

- We will also explore the different common [research designs]{.hi} meant to [identify]{.hi-purple} causal relationships

- **These skills**, more than supply & demand, constrained optimization models, ISLM, etc, **are the tools and comparative advantage of a modern research economist**
    - Why all big companies (especially in tech) have entire economics departments in them

:::
::: {.column width="50%"}
![](images/coding.jpeg)
:::
:::

## “The Credibility Revolution” in Econometrics

::: columns
::: {.column width="50%"}
<blockquote class="twitter-tweet"><p lang="en" dir="ltr">BREAKING NEWS: <br>The 2021 Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel has been awarded with one half to David Card and the other half jointly to Joshua D. Angrist and Guido W. Imbens.<a href="https://twitter.com/hashtag/NobelPrize?src=hash&amp;ref_src=twsrc%5Etfw">#NobelPrize</a> <a href="https://t.co/nkMjWai4Gn">pic.twitter.com/nkMjWai4Gn</a></p>&mdash; The Nobel Prize (@NobelPrize) <a href="https://twitter.com/NobelPrize/status/1447502041467793408?ref_src=twsrc%5Etfw">October 11, 2021</a></blockquote> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script> ]

:::
::: {.column width="50%"}
- [“Credibility revolution”]{.hi} in econometrics (c.1990s—2000s)

- Use clever research designs to approximate [natural experiments]{.hi-purple}


:::
:::

## Clever Research Designs Identify Causality

```{r, fig.retina=3, fig.align="center", fig.width=16}
ggplot(data = tibble(x=c(0,10),
                     y=c(0,10)))+
  aes(x = x,
      y = y)+
  geom_text(x=1,y=0.75, label="Correlation", size =10, color = "#fde0dd")+
  geom_text(x=5,y=0.75, label="Causation", size = 10, color = "#7a0177")+
  
  
  geom_text(x=1,y=1.5, label="Differences", size =5, color = "#fde0dd")+
  geom_text(x=1,y=1.25, label="Pre-Post", size =5, color = "#fde0dd")+
  geom_text(x=2,y=1.75, label="Multivariate Regression", size =5, color = "#fbb4b9")+
  geom_text(x=2,y=1.25, label="Matching", size =5, color = "#fbb4b9")+
    geom_text(x=3,y=2, label="Fixed Effects", size =5, color = "#f768a1")+
    geom_text(x=3.5,y=2.25, label="Diff-in-Diff", size =5, color = "#c51b8a")+
  geom_text(x=4,y=1.25, label="Natural Experiments", size =5, color = "#c51b8a")+
  geom_text(x=3.5,y=1.5, label="Regression Discontinuity", size =5, color = "#c51b8a")+
  geom_text(x=5,y=1.75, label="RCTs", size =5, color = "#7a0177")+
  annotate("segment", x = 1, xend = 5, y = 1, yend = 1, colour = "black", size=2, alpha=1, arrow=arrow(length=unit(0.5,"cm"), ends="last", type="closed"))+
  scale_x_continuous(breaks=seq(0,6,1),
                     limits=c(0,6))+
  scale_y_continuous(breaks=seq(0,3,1),
                     limits=c(0.5,2.3))+
  theme_void()
```



## What Then IS Causation?

::: columns
::: {.column width="50%"}
- $X$ causes $Y$ if we can intervene and change $X$ without changing anything else, and $Y$ changes
- $Y$ “listens to” $X$
  - $X$ may not be the only thing that causes $Y$!

:::
::: {.column width="50%"}
![](images/lightswitch.jpg)
:::
:::

## What Then IS Causation?

::: columns
::: {.column width="50%"}
- $X$ causes $Y$ if we can intervene and change $X$ without changing anything else, and $Y$ changes
- $Y$ “listens to” $X$
  - $X$ may not be the only thing that causes $Y$!

::: {.callout-tip appearance="simple" icon=false}

## Example
If $X$ is a light switch, and $Y$ is a light:

- Flipping the switch $(X)$ causes the light to go on $(Y)$
- But NOT if the light is burnt out (No $Y$ despite $X$)
- OR if the light was already on $(Y$ without $X$)

:::
:::
::: {.column width="50%"}
![](images/lightswitch.jpg)
:::
:::

## Non-Causal Claims

- All of the following have non-zero correlations. Are they *causal*?

::: {.callout-tip appearance="simple" icon=false}

## Examples

- Greater ice cream sales $\rightarrow$ more violent crime
- Rooster crows $\rightarrow$ the sun rises in the morning
- Taking Vitamin C $\rightarrow$ colds go away a few days later
- Political party $X$ in power $\rightarrow$ economy performs better/worse

:::

## Counterfactuals

::: columns
::: {.column width="50%"}
- The thing absolutely necessary of causal claims are [counterfactuals]{.hi}: what would $Y$ have been if $X$ had been different?

- It is **impossible** to make a counterfactual claim from data alone! 

- Need a (theoretical) [causal model]{.hi-purple} of the data-generating process!

:::
::: {.column width="50%"}
![](images/twopaths.jpg)
:::
:::

## Counterfactuals and RCTs

::: columns
::: {.column width="55%"}
- Again, RCTs are invoked as the gold standard for their ability to make counterfactual claims:

- Treatment/intervention $(X)$ is **randomly assigned** to individuals

> If person i who recieved treatment *had not recieved* the treatment, we can predict what his outcome *would have been*

> If person j who did not recieve treatment *had recieved treatment*, we can predict what her outcome *would have been*

- We can say this because, on average, treatment and control groups are *the same before treatment*

:::
::: {.column width="45%"}
![](images/twopaths.jpg)
:::
:::

## From RCTs to Causal Models

::: columns
::: {.column width="50%"}
- RCTs are but the best-known method of a large, growing science of [causal inference]{.hi}

- We need a [causal model]{.hi} to describe the [data-generating process (DGP)]{.hi}

- Requires us to make some [assumptions]{.hi-purple}

  - Each method we use will have a unique set of assumptions

:::
::: {.column width="50%"}
![](images/twopaths.jpg)
:::
:::

# Causal Diagrams {background-color="#314f4f" .centered}

## Causal Diagrams/DAGs
::: columns
::: {.column width="50%"}
- A surprisingly simple, yet rigorous and powerful method of modeling DGPs is using a [causal diagram]{.hi} or [DAG]{.hi}:
  - [Directed]{.hi}: Each node has arrow pointing to other nodes in only one direction
  - [Acyclic]{.hi}: Arrows cannot loop back
  - [Graph]{.hi}

:::
::: {.column width="50%"}
```{r}
library("ggdag")

dag<-dagify(y ~ x,
       y ~ z,
       x ~ z,
       labels = c("x" = "X",
                  "y" = "Y",
                  "z" = "Z"),
       coords = list(x = c(x = 1, z = 2, y = 3),
                     y = c(x = 1, z = 2, y = 1))) %>%
  tidy_dagitty(seed = 2) %>%
  ggplot(data = .)+
  aes(x = x,
      y = y,
      xend = xend,
      yend = yend)+
  geom_dag_edges(seed = 2)+
  geom_dag_point(aes(color = label))+
  geom_dag_text(aes(label = label), # geom_dag_label_repel, with seed, direction = "y", fontface = "bold"
                     #fill = label),
                fontface = "bold")+
  #scale_fill_manual(values = c("#39CCCC", "#2ECC40", "#0074D9"))+
  scale_color_manual(values = c("X" = "#39CCCC", "Y" = "#2ECC40", "Z" = "#0074D9"))+
  guides(color = F,
         fill = F)+
  theme_dag()
dag
```
:::
:::

## Causal Diagrams/DAGs

::: columns
::: {.column width="50%"}
- A visual model of the data-generating process, encodes our understanding of the causal relationships

- Requires some common sense/economic intuition

- Remember, all models are wrong, we just need them to be *useful*!

:::
::: {.column width="50%"}
```{r}
dag
```
:::
:::

## Causal Diagrams/DAGs

::: columns
::: {.column width="50%"}
- Our light switch example of causality

![](images/lightswitch.jpg)
:::
::: {.column width="50%"}
```{r}
dagify(light ~ switch + burnt,
       exposure = "switch",
       outcome = "light") %>%
  ggdag_status()+theme_dag()+theme(legend.position="none")

```
:::
:::

## Drawing a DAG: Example

::: columns
::: {.column width="50%"}
- Suppose we have data on three variables
  - `IP`: how much a firm spends on IP lawsuits 
  - `tech`: whether a firm is in tech industry
  - `profit`: firm profits

- They are all correlated with each other, but what's are the causal relationships? 

- We need our own [causal model]{.hi-purple} (from theory, intuition, etc) to sort
  - Data alone will not tell us!

:::
::: {.column width="50%"}
```{r, fig.retina=3, fig.height = 10, outwidth="90%", fig.align="center"}
library(ggdag)
#theme_set(theme_dag_blank())
library(gridExtra)

h1 <- dagify(profit ~ tech+ip,
             tech ~ ip,
             coords=list(
               x=c(tech=1, ip=2, profit=3),
               y=c(tech=1, ip=2, profit=1)
               )) %>% ggdag(stylized = FALSE, seed=256)+
  labs(title = "1")+
  theme_void()+theme(legend.position = "none")

h2 <- dagify(profit ~ tech+ip,
             ip ~ tech,
             coords=list(
               x=c(tech=1, ip=2, profit=3),
               y=c(tech=1, ip=2, profit=1)
               )) %>% ggdag(stylized = FALSE, seed=256)+
  labs(title = "2")+
  theme_void()+theme(legend.position = "none")

h3 <- dagify(profit ~ tech,
             ip ~ tech+profit,
             coords=list(
               x=c(tech=1, ip=2, profit=3),
               y=c(tech=1, ip=2, profit=1)
               )) %>% ggdag(stylized = FALSE, seed=256)+
  labs(title = "3")+
  theme_void()+theme(legend.position = "none")

h4 <- dagify(profit ~ ip,
             tech ~ ip+profit,
             coords=list(
               x=c(tech=1, ip=2, profit=3),
               y=c(tech=1, ip=2, profit=1)
               )) %>% ggdag(stylized = FALSE, seed=256)+
  labs(title = "4")+
  theme_void()+theme(legend.position = "none")

h5 <- dagify(tech ~ ip+profit,
             ip ~ profit,
             coords=list(
               x=c(tech=1, ip=2, profit=3),
               y=c(tech=1, ip=2, profit=1)
               )) %>% ggdag(stylized = FALSE, seed=256)+
  labs(title = "5")+
  theme_void()+theme(legend.position = "none")

h6 <- dagify(tech ~ profit,
             ip ~ profit+tech,
             coords=list(
               x=c(tech=1, ip=2, profit=3),
               y=c(tech=1, ip=2, profit=1)
               )) %>% ggdag(stylized = FALSE, seed=256)+
  labs(title = "6")+
  theme_void()+theme(legend.position = "none")

grid.arrange(h1, h2, h3, h4, h5, h6, ncol=2)

```
:::
:::

## Drawing a DAG
::: columns
::: {.column width="50%"}
1. Consider all the variables likely to be important to the data-generating process (including variables we can't observe!)

2. For simplicity, combine some similar ones together or prune those that aren't very important

3. Consider which variables are likely to affect others, and draw arrows connecting them

4. Test some testable implications of the model (to see if we have a correct one!)

:::
::: {.column width="50%"}
![](images/causality.jpg){fig-align="center" width=600}
:::
:::

## Drawing a DAG
::: columns
::: {.column width="50%"}
- Drawing an arrow requires a direction - making a statement about causality!

- *Omitting* an arrow makes an equally important statement too!
  - In fact, we will *need* omitted arrows to show causality!

- If two variables are correlated, but neither causes the other, likely they are both caused by another (perhaps **unobserved**) variable - add it!

- There should be no *cycles* or *loops* (if so, there’s probably another missing variable, such as time)

:::
::: {.column width="50%"}
![](images/causality.jpg){fig-align="center" width=600}
:::
:::

## DAG Example I

::: columns
::: {.column width="50%"}

::: {.callout-tip appearance="simple" icon=false}
## Example
what is the effect of education on wages?

- Education $X$, “treatment” or “exposure”

- Wages $Y$, “outcome” or “response”
:::
:::
::: {.column width="50%"}
```{r}
edu_earn_coords <- list(x = c(educ = 2, wage = 4, year = 2, bckg = 4, 
                              loc = 3, conx = 3, laws = 1, u1 = 3),
                        y = c(educ = 2, wage = 2, year = 3, bckg = 3, 
                              loc = 3, conx = 1, laws = 2, u1 = 4))
dagify(wage~educ,
       coords = edu_earn_coords) %>% 
  tidy_dagitty(seed = 2) %>%
  ggdag_parents("wage", stylized = FALSE, seed=256)+theme_dag_blank()+theme(legend.position = "none")

```
:::
:::

## DAG Example I

::: columns
::: {.column width="50%"}

- What other variables are important?
:::
::: {.column width="50%"}
```{r}
dagify(wage~educ,
       coords = edu_earn_coords) %>% 
  tidy_dagitty(seed = 2) %>%
  ggdag_parents("wage", stylized = FALSE, seed=256)+theme_dag_blank()+theme(legend.position = "none")
```
:::
:::

## DAG Example I

::: columns
::: {.column width="50%"}

- What other variables are important?
  - Ability
  - Socioeconomic status
  - Demographics
  - Phys. Ed. requirements
  - Year of birth
  - Location
  - Schooling laws
  - Job connections
:::
::: {.column width="50%"}
```{r}
dagify(wage~educ,
       coords = edu_earn_coords) %>% 
  tidy_dagitty(seed = 2) %>%
  ggdag_parents("wage", stylized = FALSE, seed=256)+theme_dag_blank()+theme(legend.position = "none")
```
:::
:::

## DAG Example I

::: columns
::: {.column width="50%"}

- In social science and complex systems, 1000s of variables could plausibly be in DAG!

- So simplify:
  - Ignore trivial things (Phys. Ed. requirement)
  - Combine similar variables (Socioeconomic status, Demographics, Location) $\rightarrow$ Background
:::
::: {.column width="50%"}
```{r}
dagify(wage~educ,
       coords = edu_earn_coords) %>% 
  tidy_dagitty(seed = 2) %>%
  ggdag_parents("wage", stylized = FALSE, seed=256)+theme_dag_blank()+theme(legend.position = "none")
```
:::
:::

## DAG Example II

::: columns
::: {.column width="50%"}

- Background, Year of birth, Location, Compulsory schooling, all cause education

- Background, year of birth, location, job connections probably cause wages
:::
::: {.column width="50%"}
```{r}
dagify(wage~educ+conx+year+bckg+loc,
       educ~bckg+year+loc+laws,
       coords = edu_earn_coords,
       outcome = "wage",
       exposure = "educ") %>%
  tidy_dagitty(seed = 2) %>%
  ggdag_status(stylized = FALSE)+theme_dag_blank()+theme(legend.position = "none")
```
:::
:::

## DAG Example II

::: columns
::: {.column width="50%"}

- Background, Year of birth, Location, Compulsory schooling, all cause education

- Background, year of birth, location, job connections probably cause wages

- Job connections in fact is probably caused by education!

- Location and background probably both caused by unobserved factor (`u1`)
:::
::: {.column width="50%"}
```{r}
dagify(wage~educ+conx+year+bckg+loc,
       educ~bckg+year+loc+laws,
       conx~educ,
       bckg~u1,
       loc~u1,
       coords = edu_earn_coords,
       outcome = "wage",
       exposure = "educ") %>%
  tidy_dagitty(seed = 2) %>%
  ggdag_status(stylized = FALSE)+theme_dag_blank()+theme(legend.position = "none")
```
:::
:::

## DAG Example II

::: columns
::: {.column width="50%"}

- This is messy, but we have a causal model!

- Makes our assumptions **explicit**, and many of them are **testable**

- DAG suggests certain relationships that will *not* exist:
  - all relationships between `laws` and `conx` go through `educ`
  - so if we controlled for `educ`, then `cor(laws,conx)` should be zero!
:::
::: {.column width="50%"}
```{r}
dagify(wage~educ+conx+year+bckg+loc,
       educ~bckg+year+loc+laws,
       conx~educ,
       bckg~u1,
       loc~u1,
       coords = edu_earn_coords,
       outcome = "wage",
       exposure = "educ") %>%
  tidy_dagitty(seed = 2) %>%
  ggdag_status(stylized = FALSE)+theme_dag_blank()+theme(legend.position = "none")
```
:::
:::

## Let the Computer Do It: Dagitty.net I

::: columns
::: {.column width="50%"}
![](images/dagitty.png)
:::
::: {.column width="50%"}
- [Dagitty.net](http://dagitty.net) is a great tool to make these and give you testable implications

- Click `Model -> New Model`

- Name your "exposure" variable $(X$ of interest) and "outcome" variable $(Y)$

:::
:::

## Let the Computer Do It: Dagitty.net II

::: columns
::: {.column width="50%"}
![](images/dagittyex1.png)
:::
::: {.column width="50%"}
- Click and drag to move nodes around

- Add a new variable by double-clicking

- Add an arrow by double-clicking one variable and then double-clicking on the target (do again to remove arrow)

:::
:::

## Let the Computer Do It: Dagitty.net II

::: columns
::: {.column width="50%"}
![](images/dagittyex2.png)
:::
::: {.column width="50%"}
:::
:::

## Let the Computer Do It: Dagitty.net III

::: columns
::: {.column width="50%"}
![](images/dagittyex2adjust.png)
:::
::: {.column width="50%"}
- Tells you [how to identify your effect]{.hi-purple}! (upper right)

> [Minimal sufficient adjustment sets]{.hi-purple} to estimate the total effect of educ on wage we need to control for:
background, location, year

:::
:::

## Let the Computer Do It: Dagitty.net III

::: columns
::: {.column width="50%"}
![](images/dagittyex2imps.png)
:::
::: {.column width="50%"}
- Tells you some [testable implications]{.hi-turquoise} of your model

- These are [(conditional) independencies]{.hi-turquoise}:

$$X \perp Y \, | \, Z$$
- "X is independent of Y, given Z"

- Implies that by *controlling for $Z$*, $X$ and $Y$ should have *no correlation*

:::
:::

## Let the Computer Do It: Dagitty.net III

::: columns
::: {.column width="50%"}
![](images/dagittyex2imps.png)
:::
::: {.column width="50%"}
- Tells you some [testable implications]{.hi-turquoise} of your model

- [Example]{.hi-green}: look at the last one listed: 

`job_connections` $\perp$ `year` $\vert$ `educ`

> “Job connections are independent of year, controlling for education”

- Implies that by controlling for `educ`, there should be no correlation between `job_connections` and `year` — can test this with data!

:::
:::

## Causal Effect

::: columns
::: {.column width="50%"}
![](images/dagittycontrolled.png)
:::
::: {.column width="50%"}
- If we control for `background`, `location`, and `year`, we can [identify the causal effect]{.hi-purple} of `educ` $\rightarrow$ `wage`.

:::
:::

## You Can Draw DAGs in `R`

- New package: `ggdag`
- Arrows are made with formula notation: `Y ~ X + Z` means "`Y` is caused by `X` and `Z`"

```{r}
#| echo: true
#| output-location: column-fragment
library(ggdag)
dagify(wage ~ educ + conx + year + bckg + loc,
       educ ~ bckg + year + loc + laws,
       conx ~ educ,
       bckg ~ u1,
       loc ~ u1,
       exposure = "educ", # optional: define X
       outcome = "wage" # optional: define Y
       ) %>%
  ggdag()+
  theme_dag()
```

## You Can Draw DAGs in `R` II

- Or you can just copy the code from `dagitty.net`!
- Use `dagitty()` from the `dagitty` package, and paste the code in quotes

```{r}
#| echo: true
#| output-location: column-fragment
# install.packages("dagitty")
library(dagitty)
dagitty('dag {
bb="0,0,1,1"
background [pos="0.413,0.335"]
compulsory_schooling_laws [pos="0.544,0.076"]
educ [exposure,pos="0.185,0.121"]
job_connections [pos="0.302,0.510"]
location [pos="0.571,0.431"]
u1 [pos="0.539,0.206"]
wage [outcome,pos="0.552,0.761"]
year [pos="0.197,0.697"]
background -> educ
background -> wage
compulsory_schooling_laws -> educ
educ -> job_connections
educ -> wage
job_connections -> wage
location -> educ
location -> wage
u1 -> background
u1 -> location
year -> educ
year -> wage
}') %>%
  ggdag()+
  theme_dag()
```

## You Can Draw DAGs In `R`

- It's not very pretty, but if you set `text = FALSE, use_labels = "name` inside `ggdag()`, makes it easier to read

```{r}
#| echo: true
#| output-location: column-fragment
dagitty('dag {
bb="0,0,1,1"
background [pos="0.413,0.335"]
compulsory_schooling_laws [pos="0.544,0.076"]
educ [exposure,pos="0.185,0.121"]
job_connections [pos="0.302,0.510"]
location [pos="0.571,0.431"]
u1 [pos="0.539,0.206"]
wage [outcome,pos="0.552,0.761"]
year [pos="0.197,0.697"]
background -> educ
background -> wage
compulsory_schooling_laws -> educ
educ -> job_connections
educ -> wage
job_connections -> wage
location -> educ
location -> wage
u1 -> background
u1 -> location
year -> educ
year -> wage
}') %>%
  ggdag(., text = FALSE, use_labels = "name")+
  theme_dag()
```

## `ggdag`: Additional Tools

- If you have defined `X` (`exposure`) and `Y` (`outcome`), you can use `ggdag_paths()` to have it show all possible paths between $X$ and $Y$!

```{r}
#| echo: true
#| output-location: column-fragment
dagify(wage ~ educ + conx + year + bckg + loc,
       educ ~ bckg + year + loc + laws,
       conx ~ educ,
       bckg ~ u1,
       loc ~ u1,
       exposure = "educ",
       outcome = "wage"
       ) %>%
  tidy_dagitty(seed = 2) %>%
  ggdag_paths()+ #<<
  theme_dag()
```


## `ggdag`: Additional Tools

- If you have defined `X` (`exposure`) and `Y` (`outcome`), you can use `ggdag_adjustment_set()` to have it show you what you need to control for in order to identify $X \rightarrow Y$!

```{r}
#| echo: true
#| output-location: column-fragment
dagify(wage ~ educ + conx + year + bckg + loc,
       educ ~ bckg + year + loc + laws,
       conx ~ educ,
       bckg ~ u1,
       loc ~ u1,
       exposure = "educ",
       outcome = "wage"
       ) %>%
  ggdag_adjustment_set(shadow = T)+ #<<
  theme_dag()
```

## `ggdag`: Additional Tools

- You can also use `impliedConditionalIndependencies()` from the `dagitty` package to have it show the testable implications from dagitty.net

```{r}
#| echo: true
#| output-location: column-fragment
dagify(wage ~ educ + conx + year + bckg + loc,
       educ ~ bckg + year + loc + laws,
       conx ~ educ,
       bckg ~ u1,
       loc ~ u1,
       exposure = "educ",
       outcome = "wage"
       ) %>%
  impliedConditionalIndependencies() #<<
```

# DAG Rules {background-color="#314f4f" .centered}

## DAG Rules


::: columns
::: {.column width="50%"}

- How does dagitty.net and `ggdag` know how to identify effects, or what to control for, or what implications are testable?

- Comes from fancy math called “do-calculus”



- Fortunately, these amount to a few simple rules that we can see on a DAG

:::
::: {.column width="50%"}
![](images/do-calculus.png)
:::
:::

## DAGs I

::: columns
::: {.column width="50%"}
- Typical notation:

- $X$ is independent variable of interest
  - Epidemiology: ["intervention"]{.hi-purple} or [“exposure”]{.hi-purple}

- $Y$ is dependent or ["response"]{.hi-purple} variable

- Other variables use other letters

- You can of course use words instead of letters!

:::
::: {.column width="50%"}
```{r}
dagify(Y~X,
                coords=list(
                x=c(X=1,Y=2),
                y=c(X=1,Y=1)
              ),
       exposure = "X",
       outcome = "Y") %>% 
  tidy_dagitty(seed = 2) %>%
  ggdag_status(stylized = FALSE)+theme_dag_blank()+theme(legend.position = "none")
```
:::
:::

## DAGs and Causal Effects

::: columns
::: {.column width="50%"}
- Arrows indicate causal effect (& direction)

- Two types of causal effect:

1. Direct effects: $X \rightarrow Y$

:::
::: {.column width="50%"}
```{r}
dagify(Y~X,
                coords=list(
                x=c(X=1,Y=2),
                y=c(X=1,Y=1)
              ),
       exposure = "X",
       outcome = "Y") %>% 
  tidy_dagitty(seed = 2) %>%
  ggdag_status(stylized = FALSE)+theme_dag_blank()+theme(legend.position = "none")

```
:::
:::

## DAGs and Causal Effects

::: columns
::: {.column width="50%"}
- Arrows indicate causal effect (& direction)

- Two types of causal effect:

1. Direct effects: $X \rightarrow Y$

2. Indirect effects: $X \rightarrow M \rightarrow Y$ 
  - $M$ is a [“mediator”]{.hi-purple} variable, the [mechanism]{.hi-purple} by which $X$ affects $Y$


:::
::: {.column width="50%"}
```{r}
dagify(Y~M,
               M~X,
                coords=list(
                x=c(X=1,Y=2, M=1.5),
                y=c(X=1,Y=1, M=1)
              ),
       exposure = "X",
       outcome = "Y") %>% 
  tidy_dagitty(seed = 2) %>%
  ggdag_status(stylized = FALSE)+theme_dag_blank()+theme(legend.position = "none")

```
:::
:::

## DAGs and Causal Effects

::: columns
::: {.column width="50%"}
- Arrows indicate causal effect (& direction)

- Two types of causal effect:

1. Direct effects: $X \rightarrow Y$

2. Indirect effects: $X \rightarrow M \rightarrow Y$ 
  - $M$ is a [“mediator”]{.hi-purple} variable, the [mechanism]{.hi-purple} by which $X$ affects $Y$

3. You of course might have both! 

:::
::: {.column width="50%"}
```{r}
dagify(Y~M+X,
               M~X,
                coords=list(
                x=c(X=1,Y=2, M=1.5),
                y=c(X=1,Y=1, M=1.5 )
              ),
       exposure = "X",
       outcome = "Y") %>% 
  tidy_dagitty(seed = 2) %>%
  ggdag_status(stylized = FALSE)+theme_dag_blank()+theme(legend.position = "none")

```
:::
:::

## Confounders

::: columns
::: {.column width="50%"}
- $Z$ is a [“confounder”]{.hi}: it causes *both* $X$ and $Y$

- $cor(X,Y)$ is made up of two parts:
  1. Causal effect of $(X \rightarrow Y)$ 👍
  2. $Z$ causing both the values of $X$ and $Y$ 👎 

- Failing to control for $Z$ will [bias]{.hi-purple} our estimate of the causal effect of $X \rightarrow Y$! 

:::
::: {.column width="50%"}
```{r}
dagify(Y~Z+X,
       X~Z,
       coords=list(
         x=c(X=1,Y=2, Z=1.5),
         y=c(X=1,Y=1, Z=2)
         ),
       exposure = "X",
       outcome = "Y") %>% 
  tidy_dagitty(seed = 2) %>%
  ggdag_status(stylized = FALSE, seed=256)+theme_dag_blank()+theme(legend.position = "none")

```
:::
:::

## Confounders

::: columns
::: {.column width="50%"}
- Confounders are the DAG-equivalent of [omitted variable bias]{.hi} (more soon)

$$Y_i=\beta_0+\beta_1 X_i$$

- By leaving out $Z_i$, this regression is [biased]{.hi-purple}

- $\hat{\beta}_1$ picks up *both*:
  1. $X \rightarrow Y$
  2. $X \leftarrow Z \rightarrow Y$

:::
::: {.column width="50%"}
```{r}
dagify(Y~Z+X,
       X~Z,
       coords=list(
         x=c(X=1,Y=2, Z=1.5),
         y=c(X=1,Y=1, Z=2)
         ),
       exposure = "X",
       outcome = "Y") %>% 
  tidy_dagitty(seed = 2) %>%
  ggdag_status(stylized = FALSE, seed=256)+theme_dag_blank()+theme(legend.position = "none")

```
:::
:::

## “Front Doors” and “Back Doors”

::: columns
::: {.column width="50%"}
- With this DAG, there are 2 paths that connect $X$ and $Y$^[Regardless of the *directions* of the arrows!]:

1. A [causal “front-door” path]{.hi}: $X \rightarrow Y$
  - 👍 what we want to measure
    
2. A [non-causal “back-door” path]{.hi-purple}: $X \leftarrow Z \rightarrow Y$
  - At least one causal arrow runs in the opposite direction
  - 👎 adds a confounding bias

:::
::: {.column width="50%"}
```{r}
dagify(Y~Z+X,
       X~Z,
       coords=list(
         x=c(X=1,Y=2, Z=1.5),
         y=c(X=1,Y=1, Z=2)
         ),
       exposure = "X",
       outcome = "Y") %>% 
  tidy_dagitty(seed = 2) %>%
  ggdag_status(stylized = FALSE, seed=256)+theme_dag_blank()+theme(legend.position = "none")

```
:::
:::

## Controlling I

::: columns
::: {.column width="50%"}
- Ideally, if we ran a [randomized control trial]{.hi} and randomly assigned different values of $X$ to different individuals, this would delete the arrow between $Z$ and $X$
  - Individuals’ values of $Z$ do not affect whether or not they are treated ($X$)

- This would only leave the front-door, $X \rightarrow Y$

- But we can rarely run an ideal RCT

:::
::: {.column width="50%"}
```{r}
dagify(Y~Z+X,
       coords=list(
         x=c(X=1,Y=2, Z=1.5),
         y=c(X=1,Y=1, Z=2)
         ),
       exposure = "X",
       outcome = "Y") %>% 
  tidy_dagitty(seed = 2) %>%
  ggdag_status(stylized = FALSE, seed=256)+theme_dag_blank()+theme(legend.position = "none")

```
:::
:::

## Controlling II

::: columns
::: {.column width="50%"}
- Instead of an RCT, if we can just [“adjust for”]{.hi-purple} or [“control for”]{.hi-purple} $Z$, we can *block* the back-door path $X \leftarrow Z \rightarrow Y$

- This would only leave the front-door path open, $X \rightarrow Y$

- “As good as” an RCT!

:::
::: {.column width="50%"}
```{r}
dagify(Y~Z+X,
       X~Z,
       coords=list(
         x=c(X=1,Y=2, Z=1.5),
         y=c(X=1,Y=1, Z=2)),
         exposure = "X",
       outcome = "Y") %>% 
  tidy_dagitty(seed = 2) %>%
  ggdag_adjustment_set(stylized = FALSE, shadow = T)+theme_dag_blank()+theme(legend.position = "bottom")

```
:::
:::

## Controlling II

::: columns
::: {.column width="50%"}
- Using our terminology, we have an outcome $(Y)$, and some treatment

- But there are **unobserved factors** $(u)$

$$Y_i = \beta_0 + \beta_1 Treatment + u_i$$

:::
::: {.column width="50%"}
```{r}
dagify(Y~treat+u,
       treat~u,
       coords=list(
         x=c(treat=1, u=1.5, Y=2),
         y=c(treat=1, u=2, Y =1)),
         exposure = "treat",
         outcome = "Y"
         ) %>% 
  #tidy_dagitty() %>%
  ggdag_status(stylized = FALSE, seed=256)+theme_dag_blank()+theme(legend.position = "none")
```
:::
:::

## Controlling II

::: columns
::: {.column width="50%"}
- Using our terminology from last class, we have an outcome $(Y)$, and some treatment

- But there are **unobserved factors** $(u)$

$$Y_i = \beta_0 + \beta_1 Treatment + u_i$$

- If we can *randomly* assign treatment, this makes treatment exogenous:

$$cor(treatment,u)=0$$

:::
::: {.column width="50%"}
```{r}
dagify(Y~treat+u,
       coords=list(
         x=c(treat=1, u=1.5, Y=2),
         y=c(treat=1, u=2, Y =1)),
         exposure = "treat",
         outcome = "Y"
         ) %>% 
  #tidy_dagitty() %>%
  ggdag_status(stylized = F)+theme_dag_blank()+theme(legend.position = "none")
```
:::
:::

## Controlling II

::: columns
::: {.column width="50%"}
- Using our terminology from last class, we have an outcome $(Y)$, and some treatment

- But there are **unobserved factors** $(u)$

$$Y_i = \beta_0 + \beta_1 Treatment + u_i$$

- When we (often) can’t randomly assign treatment, we have to find another way to control for measurable things in $u$

:::
::: {.column width="50%"}
```{r}
dagify(Y~treat+u,
       treat~u,
       coords=list(
         x=c(treat=1, u=1.5, Y=2),
         y=c(treat=1, u=2, Y =1)),
         exposure = "treat",
         outcome = "Y"
         ) %>% 
  #tidy_dagitty() %>%
  ggdag_adjustment_set(shadow = T)+theme_dag()
```
:::
:::

## Controlling II

::: columns
::: {.column width="50%"}
- Controlling for a single variable along a long causal path is sufficient to block that path!

- Causal path: $X \rightarrow Y$
- Backdoor path: $X \leftarrow A \rightarrow B \rightarrow C \rightarrow Y$

- It is sufficient to block this backdoor by controlling **either** $A$ **or** $B$ **or** $C$!

:::
::: {.column width="50%"}
```{r}
dagify(Y~X+C,
       X~A,
       B~A,
       C~B,
         exposure = "X",
         outcome = "Y"
         ) %>%
  tidy_dagitty(seed = 256) %>%
  ggdag_status(stylized = FALSE)+theme_dag_blank()+theme(legend.position = "none")

```
:::
:::

## Controlling II

::: columns
::: {.column width="50%"}
- Controlling for a single variable along a long causal path is sufficient to block that path!

- Causal path: $X \rightarrow Y$
- Backdoor path: $X \leftarrow A \rightarrow B \rightarrow C \rightarrow Y$

- It is sufficient to block this backdoor by controlling **either** $A$ **or** $B$ **or** $C$!

:::
::: {.column width="50%"}
```{r}
dagify(Y~X+C,
       X~A,
       B~A,
       C~B,
         exposure = "X",
         outcome = "Y"
         ) %>%
  tidy_dagitty(seed = 256) %>%
  ggdag_adjustment_set(stylized = FALSE, shadow = T)+theme_dag_blank()+theme(legend.position = "bottom")

```
:::
:::

## The Back Door Criterion

::: columns
::: {.column width="50%"}
- To [identify]{.hi} the causal effect of $X \rightarrow Y$:

- [“Back-door criterion”]{.hi-purple}: control for the minimal amount of variables sufficient to ensure that **no open back-door exists** between $X$ and $Y$

- [Example]{.hi-green}: in this DAG, control for $Z$

:::
::: {.column width="50%"}
```{r}
dagify(Y~Z+X,
       X~Z,
       coords=list(
         x=c(X=1,Y=2, Z=1.5),
         y=c(X=1,Y=1, Z=2)),
         exposure = "X",
       outcome = "Y") %>% 
  tidy_dagitty(seed = 256) %>%
  ggdag_status(stylized = FALSE)+theme_dag_blank()+theme(legend.position = "none")

```
:::
:::

## The Back Door Criterion

::: columns
::: {.column width="50%"}
- Implications of the Back-door criterion:

1) You *only* need to control for the variables that keep a back-door open, *not all other variables!*

[**Example**]{.hi-green}:

- $X \rightarrow Y$ (front-door)
- $X \leftarrow A \rightarrow B \rightarrow Y$ (back-door)

:::
::: {.column width="50%"}
```{r}
dagify(Y~X+B+C+Z,
       X~A,
       B~A,
         exposure = "X",
         outcome = "Y"
         ) %>% 
  tidy_dagitty(seed = 256) %>%
  ggdag_status(stylized = FALSE)+theme_dag_blank()+theme(legend.position = "none")

```
:::
:::

## The Back Door Criterion

::: columns
::: {.column width="50%"}
- Implications of the Back-door criterion:

1) You *only* need to control for the variables that keep a back-door open, *not all other variables!*

[**Example**]{.hi-green}:

- $X \rightarrow Y$ (front-door)
- $X \leftarrow A \rightarrow B \rightarrow Y$ (back-door)

- Need only control for $A$ *or* $B$ to block the back-door path
- $C$ and $Z$ have no effect on $X$, and therefore we don’t need to control for them! 


:::
::: {.column width="50%"}
```{r}
dagify(Y~X+B+C+Z,
       X~A,
       B~A,
         exposure = "X",
         outcome = "Y"
         ) %>% 
  tidy_dagitty(seed = 256) %>%
  ggdag_adjustment_set(stylized = FALSE, shadow = T)+theme_dag_blank()+theme(legend.position = "none")

```
:::
:::

## The Back Door Criterion: Colliders

::: columns
::: {.column width="50%"}
2) Exception: the case of a [“collider”]{.hi}
  - If arrows “collide” at a node, **that node is automatically blocking the pathway**, [do not control for it!]{.hi-purple}
  - Controlling for a collider would *open* the path and **add bias!**

[**Example**]{.hi-green}:

- $X \rightarrow Y$ (front-door)
- $X \leftarrow A \rightarrow B \leftarrow C \rightarrow Y$ (back-door, but **blocked by B!**)

:::
::: {.column width="50%"}
```{r}
dagify(Y~X+C,
       X~A,
       B~A+C,
         exposure = "X",
         outcome = "Y"
         ) %>% 
  tidy_dagitty(seed = 256) %>%
  ggdag_status(stylized = FALSE)+theme_dag_blank()+theme(legend.position = "none")
```
:::
:::

## The Back Door Criterion: Colliders

::: columns
::: {.column width="50%"}
2) Exception: the case of a [“collider”]{.hi}
  - If arrows “collide” at a node, **that node is automatically blocking the pathway**, [do not control for it!]{.hi-purple}
  - Controlling for a collider would *open* the path and **add bias!**

[**Example**]{.hi-green}:

- $X \rightarrow Y$ (front-door)
- $X \leftarrow A \rightarrow B \leftarrow C \rightarrow Y$ (back-door, but **blocked by B!**)
- Don’t need to control for anything here!

:::
::: {.column width="50%"}
```{r}
dagify(Y~X+C,
       X~A,
       B~A+C,
         exposure = "X",
         outcome = "Y"
         ) %>% 
  tidy_dagitty(seed = 256) %>%
  ggdag_adjustment_set(stylized = FALSE)+theme_dag_blank()+theme(legend.position = "none")
```
:::
:::

## The Back Door Criterion: Colliders Example

::: columns
::: {.column width="50%"}
Are you less likely to get the flu if you are hit by a bus?

- $Flu$: getting the flu
- $Bus$: being hit by a bus
- $Hos$: being in the hospital

- Both $Flu$ and $Bus$ send you to $Hos$ (arrows)

- Conditional on being in $Hos$, negative correlation between $Flu$ and $Bus$ (spurious!)

:::
::: {.column width="50%"}
```{r}
dagify(Hos~Flu+Bus,
       coords=list(
         x=c(Flu=1, Hos=1.5, Bus=2),
         y=c(Flu=1, Hos=2, Bus=1)
       )) %>% 
  ggdag_parents("Hos", stylized = FALSE, seed=256)+theme_dag_blank()+theme(legend.position = "none")
```
:::
:::

## The Back Door Criterion: Colliders Example

::: columns
::: {.column width="50%"}
- In the NBA, apparently players’ height has no relationship to points scored?

:::
::: {.column width="50%"}
![](images/bulls-scores-1.png)
:::
:::

## The Back Door Criterion: Colliders Example

::: columns
::: {.column width="50%"}
- **In the NBA**, apparently players’ height has no relationship to points scored?

:::
::: {.column width="50%"}
```{r}
dagify(NBA~Height+Points,
       Points~Height,
       coords=list(
         x=c(Height=1, NBA=1.5, Points=2),
         y=c(Height=1, NBA=2, Points=1)
       )) %>% 
  ggdag_parents("NBA", stylized = FALSE, seed=256)+theme_dag_blank()+theme(legend.position = "none")
```
:::
:::

## The Front Door Criterion: Mediators I

::: columns
::: {.column width="50%"}
- Another case where controlling for a variable actually *adds bias* is if that variable is known as a [“mediator”]{.hi}.

[Example]{.hi-green}

- $X \rightarrow M \rightarrow Y$ (front-door)
- $X \leftarrow A \rightarrow Y$ (back-door)
- $X \leftarrow B \rightarrow Y$ (back-door)

- Should we control for $M$? 
- If we did, this would block the front-door! 

:::
::: {.column width="50%"}
```{r}
dagify(Y~A+B+M,
       M~X,
       X~A+B,
       coords=list(
         x=c(X=1, A=1.5, B=1.5, M=1.5, Y=2),
         y=c(X=1, A=2, B=0, M=1, Y=1)),
         exposure = "X",
         outcome = "Y"
         ) %>% 
  ggdag_status(stylized = FALSE)+theme_dag_blank()+theme(legend.position = "none")
```
:::
:::

## The Front Door Criterion: Mediators II

::: columns
::: {.column width="50%"}
- Another case where controlling for a variable actually *adds bias* is if that variable is known as a [“mediator”]{.hi}.

[Example]{.hi-green}

- $X \rightarrow M \rightarrow Y$ (front-door)
- $X \leftarrow A \rightarrow Y$ (back-door)
- $X \leftarrow B \rightarrow Y$ (back-door)

- If we control for $M$, would block the front-door! 

- If we can estimate $X \rightarrow M$ and $M \rightarrow Y$ (note, no back-doors to either of these!), we can estimate $X \rightarrow Y$


- This is the [front door method]{.hi-purple}

:::
::: {.column width="50%"}
```{r}
dagify(Y~A+B+M,
       M~X,
       X~A+B,
       coords=list(
         x=c(X=1, A=1.5, B=1.5, M=1.5, Y=2),
         y=c(X=1, A=2, B=0, M=1, Y=1)),
         exposure = "X",
         outcome = "Y"
         ) %>% 
  ggdag_adjustment_set(stylized = FALSE, shadow = T)+theme_dag_blank()+theme(legend.position = "bottom")
```
:::
:::

## The Front Door Criterion: Mediators III

::: columns
::: {.column width="50%"}
- Tobacco industry claimed that $cor(smoking, cancer)$ could be spurious due to a confounding `gene` that affects both!
  - Smoking `gene` is unobservable

- Suppose smoking causes `tar` buildup in lungs, which cause `cancer`

- We should *not* control for `tar`, it's on the **front-door path**
  - This is how scientific studies can relate smoking to cancer

:::
::: {.column width="50%"}
```{r}
dagify(canc~tar+gene,
       tar~smok,
       smok~gene,
       coords=list(
         x=c(smok=1, tar=1.5, gene=1.5, canc=2),
         y=c(smok=1, tar=1, gene=2, canc=1)),
         exposure = "smok",
         outcome = "canc"
       ) %>% 
  ggdag_status(stylized = FALSE, seed=256)+theme_dag_blank()+theme(legend.position = "none")
```
:::
:::

## Summary: DAG Rules for Causal Identification


::: columns
::: {.column width="50%"}
Thus, to achieve [causal identification]{.hi}, control for the minimal amount of variables such that:

1. Ensure **no back-door path remains open**
  - Close back-door paths by *controlling* for any one variable along that path
  - Colliders along a path *automatically* close that path

2. Ensure **no front-door path is closed**
  - Do not control for mediators

:::
::: {.column width="50%"}
```{r}
dagify(Y~A+B+M,
       M~X,
       X~A+B,
       coords=list(
         x=c(X=1, A=1.5, B=1.5, M=1.5, Y=2),
         y=c(X=1, A=2, B=0, M=1, Y=1)),
         exposure = "X",
         outcome = "Y"
         ) %>% 
  #tidy_dagitty() %>%
  ggdag_status(stylized = FALSE, seed=256)+theme_dag_blank()+theme(legend.position = "none")
```

:::
:::